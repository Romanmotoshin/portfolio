{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getComic","_transformComics","getAllComics","comics","title","description","pageCount","language","textObjects","urls","price","prices","thumbnail","path","extension","char","name","slice","homepage","wiki","items","AppBanner","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsLoaded","newComicsList","ended","length","arr","item","i","to","renderItems","errorMessage","spinner","Spinner","onClick","disabled","ComicsPage"],"mappings":"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","file":"static/js/4.dbd0ea27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback} from \"react\";\r\n\r\nconst useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async ( url, method = \"GET\", body = null, headers = {'Content-type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback( () => setError(null), [])\r\n\r\n    return {loading, error, request, clearError}\r\n}\r\n\r\nexport default useHttp;","import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=b589950ea7a5ad0b6cf227576cd2dbf0';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 20) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title || 'No title',\r\n            description: comics.description || \"There is no description\",\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the numbers of page',\r\n            language: comics.textObjects.language || 'en-ru',\r\n            url: comics.urls[0].url,\r\n            price: comics.prices[0].price,\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    return {loading, error, getCharacter, getAllCharacters, clearError, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(20);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsLoaded)\n    }\n\n    const onComicsLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    } \n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        );\n    }\n\n    const items = renderItems(comicsList)\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                onClick = {() => onRequest(offset)}\n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}